env:
  - ghc=7.6.1  cabal=1.18 benchmarks=1 lower_bound_dependencies=1
  - ghc=7.6.1  cabal=1.18
  - ghc=7.8.1  cabal=1.18
  - ghc=7.10.1 cabal=1.22 tests=1
  - ghc=7.10.1 cabal=1.22 tests=1 postgres_version=8.3.0 postgres_integer_datetimes=0
  - ghc=7.10.1 cabal=1.22 tests=1 postgres_version=8.3.0 postgres_integer_datetimes=1
  - ghc=7.10.1 cabal=1.22 tests=1 postgres_version=9.4.0 postgres_integer_datetimes=1
  

install:
  # Set up the Shell to treat the semicolon as &&
  - set -o pipefail && set -e
  # Install GHC and Cabal
  -
    ghc=${ghc=7.10.1}; 
    cabal=${cabal=1.22};
    travis_retry sudo add-apt-repository -y ppa:hvr/ghc;
    travis_retry sudo apt-get update;
    travis_retry sudo apt-get install cabal-install-$cabal ghc-$ghc;
    export PATH=/opt/ghc/$ghc/bin:/opt/cabal/$cabal/bin:$PATH;
  # Update the Cabal database
  - cabal update
  # Switch to the distro:
  - 
    export pkg_name=$(cabal info . | awk '{print $2;exit}');
    cabal sdist;
    cd dist;
    tar xzvf $pkg_name.tar.gz;
    cd $pkg_name;
  # Install the lower bound dependencies
  - 
    if [ "$lower_bound_dependencies" = "1" ];
    then
      constraint_options=(
        "--constraint=transformers==0.3.*"
        "--constraint=hashtables==1.1.*"
        "--constraint=time==1.4.*"
        "--constraint=aeson==0.7.*"
      );
    fi;
  # Install the "haskell-src-exts" implicit dependency
  - cabal install happy --reorder-goals --force-reinstalls ${constraint_options[@]}
  # Install the library dependencies
  - cabal install --only-dependencies --reorder-goals --force-reinstalls
      ${constraint_options[@]}
      $([ "$tests" = "1" ] && echo "--enable-tests")
      $([ "$benchmarks" = "1" ] && echo "--enable-benchmarks")
  # Build the library
  - cabal build
  # Configure and build the remaining stuff
  - cabal configure 
      $([ "$tests" = "1" ] && echo "--enable-tests")
      $([ "$benchmarks" = "1" ] && echo "--enable-benchmarks")
      -f doctest
  - cabal build
  # Optionally install an arbitrary PostgreSQL version:
  - 
    if [ $postgres_version ];
    then
      export project_dir=$(pwd);
      sudo /etc/init.d/postgresql stop;
      wget https://ftp.postgresql.org/pub/source/v$postgres_version/postgresql-$postgres_version.tar.gz;
      tar xzvf postgresql-$postgres_version.tar.gz;
      cd "postgresql-$postgres_version";
      if [ $postgres_integer_datetimes = "1" ];
      then
        sudo ./configure --enable-integer-datetimes --without-readline;
      else
        sudo ./configure --disable-integer-datetimes --without-readline;
      fi;
      sudo make;
      sudo make install;
      sudo mkdir /usr/local/pgsql/data;
      sudo chown postgres /usr/local/pgsql/data;
      sudo mkdir /usr/local/pgsql/log;
      sudo chown postgres /usr/local/pgsql/log;
      sudo -u postgres /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data;
      sudo -u postgres 
        /usr/local/pgsql/bin/pg_ctl start 
          -D /usr/local/pgsql/data 
          -l /usr/local/pgsql/log/main.log
          -o "-h localhost -p 5432";
      sleep 3;
      sudo -u postgres /usr/local/pgsql/bin/createdb postgres || true;
      cd $project_dir;
    fi;


script:
  - |
    if [ "$tests" = "1" ];
    then
      cabal test --show-details=always ||
      { 
        echo "Test failed. Here's the Postgres' log:";
        sudo cat /usr/local/pgsql/log/main.log;
        exit 1;
      };
    fi;
